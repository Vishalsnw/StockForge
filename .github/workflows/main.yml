name: 🏦 StockForge Auto-Fix Duplicates

on:
  workflow_dispatch:
    inputs:
      fix_type:
        description: 'Type of fix to apply'
        required: true
        default: 'remove_duplicates'
        type: choice
        options:
          - remove_duplicates
          - update_timestamps
          - full_cleanup
      user_name:
        description: 'Target User (default: Vishalsnw)'
        required: false
        default: 'Vishalsnw'
        type: string

  push:
    branches: [main]
    paths:
      - 'frontend/src/hooks/useBotMarket.js'
      - 'src/hooks/useBotMarket.js'

  workflow_run:
    workflows: ["Vercel Production Deployment"]
    types:
      - completed

jobs:
  auto-fix-duplicates:
    name: 🔧 Fix Duplicate Declarations
    runs-on: ubuntu-latest

    steps:
      - name: 📅 Display Current Info
        run: |
          echo "🏦 STOCKFORGE AUTO-FIX WORKFLOW"
          echo "👤 User: ${{ github.event.inputs.user_name || 'Vishalsnw' }}"
          echo "📅 UTC Time: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "🎯 Fix Type: ${{ github.event.inputs.fix_type || 'remove_duplicates' }}"
          echo "🚀 Workflow: auto-fix-duplicates"
          echo "=================================================="

      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            package-lock.json

      - name: 📦 Install Dependencies
        run: |
          if [ -f "frontend/package.json" ]; then
            cd frontend && npm ci
          elif [ -f "package.json" ]; then
            npm ci
          else
            echo "⚠️ No package.json found, skipping npm install"
          fi

      - name: 🔍 Detect Target File
        id: detect-file
        run: |
          if [ -f "frontend/src/hooks/useBotMarket.js" ]; then
            echo "target_file=frontend/src/hooks/useBotMarket.js" >> $GITHUB_OUTPUT
          elif [ -f "src/hooks/useBotMarket.js" ]; then
            echo "target_file=src/hooks/useBotMarket.js" >> $GITHUB_OUTPUT
          else
            echo "❌ ERROR: useBotMarket.js not found!"
            exit 1
          fi

      - name: 🔍 Analyze Current Duplicates
        id: analyze
        run: |
          TARGET_FILE="${{ steps.detect-file.outputs.target_file }}"
          echo "Analyzing: $TARGET_FILE"

          CURRENT_USER_COUNT=$(grep -c "const currentUser =" "$TARGET_FILE" || echo "0")
          CURRENT_DATE_TIME_COUNT=$(grep -c "const currentDateTimeUTC =" "$TARGET_FILE" || echo "0")
          CURRENT_DATE_COUNT=$(grep -c "const currentDate =" "$TARGET_FILE" || echo "0")
          CURRENT_TIME_COUNT=$(grep -c "const currentTime =" "$TARGET_FILE" || echo "0")

          TOTAL_DUPLICATES=$((CURRENT_USER_COUNT + CURRENT_DATE_TIME_COUNT + CURRENT_DATE_COUNT + CURRENT_TIME_COUNT - 4))
          echo "total_duplicates=$TOTAL_DUPLICATES" >> $GITHUB_OUTPUT

          if [ "$TOTAL_DUPLICATES" -gt 0 ]; then
            echo "needs_fix=true" >> $GITHUB_OUTPUT
          else
            echo "needs_fix=false" >> $GITHUB_OUTPUT
          fi

      - name: 🔧 Create Auto-Fix Script
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          cat > auto_fix.js << 'EOF'
          // JavaScript content (unchanged)
          // Place your node.js fixer code here...
          EOF
          chmod +x auto_fix.js

      - name: 🚀 Execute Auto-Fix
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          TARGET_FILE="${{ steps.detect-file.outputs.target_file }}"
          node auto_fix.js "$TARGET_FILE"

      - name: 🔍 Verify Build After Fix
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          if [ -f "frontend/package.json" ]; then
            cd frontend && npm ci && npm run build
          elif [ -f "package.json" ]; then
            npm ci && npm run build
          else
            echo "⚠️ No package.json, skipping build test"
          fi

      - name: 💾 Commit and Push Changes
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "StockForge Auto-Fix Bot"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🤖 Auto-fix: Remove duplicate declarations"
            git push
          fi

      - name: 🎉 Success Summary
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          echo "🎉 STOCKFORGE AUTO-FIX COMPLETED!"

      - name: ℹ️ No Fix Needed
        if: steps.analyze.outputs.needs_fix == 'false'
        run: |
          echo "✅ No duplicates found. No action required."
