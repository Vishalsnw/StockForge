name: StockForge Auto-Fix Duplicates

on:
  workflow_dispatch:
    inputs:
      fix_type:
        description: Type of fix to apply
        required: true
        default: remove_duplicates
        type: choice
        options:
          - remove_duplicates
          - update_timestamps
          - full_cleanup
      user_name:
        description: Target User
        required: false
        default: Vishalsnw
        type: string
      
  push:
    branches: 
      - main
    paths: 
      - frontend/src/hooks/useBotMarket.js
      - src/hooks/useBotMarket.js

jobs:
  auto-fix-duplicates:
    name: Fix Duplicate Declarations
    runs-on: ubuntu-latest
    
    steps:
      - name: Display Info
        run: |
          echo "StockForge Auto-Fix Workflow"
          echo "Current UTC Time: 2025-06-12 14:08:55"
          echo "User: ${{ inputs.user_name || 'Vishalsnw' }}"
          echo "Fix Type: ${{ inputs.fix_type || 'remove_duplicates' }}"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Detect Target File
        id: detect-file
        run: |
          if [ -f "frontend/src/hooks/useBotMarket.js" ]; then
            echo "target_file=frontend/src/hooks/useBotMarket.js" >> $GITHUB_OUTPUT
            echo "Target: frontend/src/hooks/useBotMarket.js"
          elif [ -f "src/hooks/useBotMarket.js" ]; then
            echo "target_file=src/hooks/useBotMarket.js" >> $GITHUB_OUTPUT
            echo "Target: src/hooks/useBotMarket.js"
          else
            echo "ERROR: useBotMarket.js not found!"
            exit 1
          fi

      - name: Show Current File Around Line 589
        run: |
          TARGET_FILE="${{ steps.detect-file.outputs.target_file }}"
          echo "Showing content around line 589:"
          sed -n '580,600p' "$TARGET_FILE" || echo "Could not show lines around 589"

      - name: Analyze Duplicates
        id: analyze
        run: |
          TARGET_FILE="${{ steps.detect-file.outputs.target_file }}"
          echo "Analyzing duplicates in $TARGET_FILE"
          
          if [ ! -f "$TARGET_FILE" ]; then
            echo "File not found: $TARGET_FILE"
            exit 1
          fi
          
          # Show all lines with const declarations
          echo "All const currentUser lines:"
          grep -n "const currentUser =" "$TARGET_FILE" || echo "No currentUser found"
          
          echo "All const currentDateTimeUTC lines:"
          grep -n "const currentDateTimeUTC =" "$TARGET_FILE" || echo "No currentDateTimeUTC found"
          
          USER_COUNT=$(grep -c "const currentUser =" "$TARGET_FILE" || echo "0")
          DATETIME_COUNT=$(grep -c "const currentDateTimeUTC =" "$TARGET_FILE" || echo "0")
          DATE_COUNT=$(grep -c "const currentDate =" "$TARGET_FILE" || echo "0")
          TIME_COUNT=$(grep -c "const currentTime =" "$TARGET_FILE" || echo "0")
          
          echo "COUNTS:"
          echo "currentUser: $USER_COUNT declarations"
          echo "currentDateTimeUTC: $DATETIME_COUNT declarations"
          echo "currentDate: $DATE_COUNT declarations"
          echo "currentTime: $TIME_COUNT declarations"
          
          TOTAL_FOUND=$((USER_COUNT + DATETIME_COUNT + DATE_COUNT + TIME_COUNT))
          TOTAL_DUPLICATES=$((TOTAL_FOUND - 4))
          
          echo "total_duplicates=$TOTAL_DUPLICATES" >> $GITHUB_OUTPUT
          
          if [ $TOTAL_DUPLICATES -gt 0 ]; then
            echo "needs_fix=true" >> $GITHUB_OUTPUT
            echo "$TOTAL_DUPLICATES duplicates found - FIX NEEDED"
          else
            echo "needs_fix=false" >> $GITHUB_OUTPUT
            echo "No duplicates found - File is clean"
          fi

      - name: Create Aggressive Fix Script
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          cat > fix_aggressive.sh << 'BASH_END'
          #!/bin/bash
          
          TARGET_FILE="$1"
          
          if [ -z "$TARGET_FILE" ]; then
              echo "ERROR: No file path provided"
              exit 1
          fi
          
          if [ ! -f "$TARGET_FILE" ]; then
              echo "ERROR: File not found: $TARGET_FILE"
              exit 1
          fi
          
          echo "Starting aggressive fix for: $TARGET_FILE"
          
          # Create backup
          cp "$TARGET_FILE" "${TARGET_FILE}.backup-$(date +%s)"
          echo "Backup created"
          
          # Show lines around 589 before fix
          echo "BEFORE FIX - Lines around 589:"
          sed -n '585,595p' "$TARGET_FILE"
          
          # Method 1: Remove all duplicate blocks aggressively
          echo "Removing duplicate comment blocks..."
          
          # Remove any lines containing duplicate const declarations after line 100
          # Keep only the first occurrence
          awk '
          BEGIN { 
              found_user = 0; found_datetime = 0; found_date = 0; found_time = 0; 
          }
          /const currentUser =/ { 
              if (found_user == 0) { 
                  print; found_user = 1; 
              } else { 
                  print "// REMOVED DUPLICATE: " $0; 
              } 
              next 
          }
          /const currentDateTimeUTC =/ { 
              if (found_datetime == 0) { 
                  print; found_datetime = 1; 
              } else { 
                  print "// REMOVED DUPLICATE: " $0; 
              } 
              next 
          }
          /const currentDate =/ { 
              if (found_date == 0) { 
                  print; found_date = 1; 
              } else { 
                  print "// REMOVED DUPLICATE: " $0; 
              } 
              next 
          }
          /const currentTime =/ { 
              if (found_time == 0) { 
                  print; found_time = 1; 
              } else { 
                  print "// REMOVED DUPLICATE: " $0; 
              } 
              next 
          }
          { print }
          ' "$TARGET_FILE" > "${TARGET_FILE}.temp"
          
          # Move temp file back
          mv "${TARGET_FILE}.temp" "$TARGET_FILE"
          
          # Method 2: Remove comment lines that precede duplicates
          echo "Removing duplicate comment blocks..."
          sed -i '/\/\/ ===== CURRENT INFO (Updated) =====/,+4 {
              /\/\/ ===== CURRENT INFO (Updated) =====/!b
              N;N;N;N
              /const currentUser.*const currentDateTimeUTC.*const currentDate/d
          }' "$TARGET_FILE"
          
          # Method 3: Ensure currentUser is set to Vishalsnw
          sed -i "s/const currentUser = '[^']*';/const currentUser = 'Vishalsnw';/" "$TARGET_FILE"
          
          # Show lines around 589 after fix
          echo "AFTER FIX - Lines around 589:"
          sed -n '585,595p' "$TARGET_FILE"
          
          # Final count
          USER_COUNT_AFTER=$(grep -c "const currentUser =" "$TARGET_FILE")
          DATETIME_COUNT_AFTER=$(grep -c "const currentDateTimeUTC =" "$TARGET_FILE")
          
          echo "FINAL COUNTS:"
          echo "currentUser: $USER_COUNT_AFTER declarations"
          echo "currentDateTimeUTC: $DATETIME_COUNT_AFTER declarations"
          
          if [ $USER_COUNT_AFTER -le 1 ] && [ $DATETIME_COUNT_AFTER -le 1 ]; then
              echo "SUCCESS: Duplicates removed or commented out"
              exit 0
          else
              echo "ERROR: Still have duplicates, manual intervention needed"
              exit 1
          fi
          BASH_END
          
          chmod +x fix_aggressive.sh
          echo "Aggressive fix script created"

      - name: Execute Aggressive Fix
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          TARGET_FILE="${{ steps.detect-file.outputs.target_file }}"
          echo "Executing aggressive fix on $TARGET_FILE"
          
          if ./fix_aggressive.sh "$TARGET_FILE"; then
            echo "Aggressive fix completed successfully"
          else
            echo "Aggressive fix failed, trying manual line removal..."
            
            # Manual line-by-line removal of known duplicates
            TARGET_FILE="${{ steps.detect-file.outputs.target_file }}"
            
            # Remove lines 588-591 specifically (the duplicate block)
            sed -i '588,591d' "$TARGET_FILE"
            echo "Manually removed lines 588-591"
            
            # Verify
            if grep -q "const currentUser.*const currentUser" "$TARGET_FILE"; then
              echo "Still have duplicates, need manual fix"
              exit 1
            else
              echo "Manual fix successful"
            fi
          fi

      - name: Verify Fix and Test Build
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          TARGET_FILE="${{ steps.detect-file.outputs.target_file }}"
          
          # Final verification
          USER_COUNT=$(grep -c "const currentUser =" "$TARGET_FILE" || echo "0")
          echo "Final currentUser count: $USER_COUNT"
          
          if [ $USER_COUNT -gt 1 ]; then
            echo "ERROR: Still have $USER_COUNT currentUser declarations"
            echo "Showing all occurrences:"
            grep -n "const currentUser =" "$TARGET_FILE"
            exit 1
          fi
          
          # Test build
          echo "Testing build..."
          cd frontend
          npm install
          npm run build
          
          if [ $? -eq 0 ]; then
            echo "BUILD SUCCESS: No more duplicate errors"
          else
            echo "BUILD FAILED: Manual intervention required"
            exit 1
          fi

      - name: Commit Changes
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "StockForge-Bot"
          
          git add .
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "EMERGENCY FIX: Remove duplicate const declarations at line 589 - Vishalsnw - 2025-06-12 14:08:55"
            git push
            echo "Emergency fix committed and pushed"
          fi

      - name: Success Summary
        if: steps.analyze.outputs.needs_fix == 'true'
        run: |
          echo "EMERGENCY FIX COMPLETED"
          echo "======================"
          echo "User: Vishalsnw"
          echo "Target: ${{ steps.detect-file.outputs.target_file }}"
          echo "Duplicates fixed: ${{ steps.analyze.outputs.total_duplicates }}"
          echo "Build test: PASSED"
          echo "Ready for Vercel deployment"

      - name: No Fix Needed
        if: steps.analyze.outputs.needs_fix == 'false'
        run: |
          echo "No duplicates found"
          echo "File is already clean"
          echo "User: Vishalsnw"
